// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/gateway/model_build_lattice_service.go

// Package gateway is a generated GoMock package.
package gateway

import (
	context "context"
	reflect "reflect"

	core "github.com/aws/aws-application-networking-k8s/pkg/model/core"
	gomock "github.com/golang/mock/gomock"
)

// MockLatticeServiceBuilder is a mock of LatticeServiceBuilder interface.
type MockLatticeServiceBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockLatticeServiceBuilderMockRecorder
}

// MockLatticeServiceBuilderMockRecorder is the mock recorder for MockLatticeServiceBuilder.
type MockLatticeServiceBuilderMockRecorder struct {
	mock *MockLatticeServiceBuilder
}

// NewMockLatticeServiceBuilder creates a new mock instance.
func NewMockLatticeServiceBuilder(ctrl *gomock.Controller) *MockLatticeServiceBuilder {
	mock := &MockLatticeServiceBuilder{ctrl: ctrl}
	mock.recorder = &MockLatticeServiceBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLatticeServiceBuilder) EXPECT() *MockLatticeServiceBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockLatticeServiceBuilder) Build(ctx context.Context, httpRoute core.Route) (core.Stack, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", ctx, httpRoute)
	ret0, _ := ret[0].(core.Stack)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockLatticeServiceBuilderMockRecorder) Build(ctx, httpRoute interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockLatticeServiceBuilder)(nil).Build), ctx, httpRoute)
}
