// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-application-networking-k8s/pkg/aws/services (interfaces: Tagging)

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTagging is a mock of Tagging interface.
type MockTagging struct {
	ctrl     *gomock.Controller
	recorder *MockTaggingMockRecorder
}

// MockTaggingMockRecorder is the mock recorder for MockTagging.
type MockTaggingMockRecorder struct {
	mock *MockTagging
}

// NewMockTagging creates a new mock instance.
func NewMockTagging(ctrl *gomock.Controller) *MockTagging {
	mock := &MockTagging{ctrl: ctrl}
	mock.recorder = &MockTaggingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagging) EXPECT() *MockTaggingMockRecorder {
	return m.recorder
}

// FindResourcesByTags mocks base method.
func (m *MockTagging) FindResourcesByTags(arg0 context.Context, arg1 ResourceType, arg2 map[string]*string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindResourcesByTags", arg0, arg1, arg2)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindResourcesByTags indicates an expected call of FindResourcesByTags.
func (mr *MockTaggingMockRecorder) FindResourcesByTags(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindResourcesByTags", reflect.TypeOf((*MockTagging)(nil).FindResourcesByTags), arg0, arg1, arg2)
}

// GetTagsForArns mocks base method.
func (m *MockTagging) GetTagsForArns(arg0 context.Context, arg1 []string) (map[string]map[string]*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTagsForArns", arg0, arg1)
	ret0, _ := ret[0].(map[string]map[string]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTagsForArns indicates an expected call of GetTagsForArns.
func (mr *MockTaggingMockRecorder) GetTagsForArns(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTagsForArns", reflect.TypeOf((*MockTagging)(nil).GetTagsForArns), arg0, arg1)
}
