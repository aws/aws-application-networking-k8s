// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/deploy/lattice/service_network_manager.go

// Package lattice is a generated GoMock package.
package lattice

import (
	context "context"
	reflect "reflect"

	lattice "github.com/aws/aws-application-networking-k8s/pkg/model/lattice"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceNetworkManager is a mock of ServiceNetworkManager interface.
type MockServiceNetworkManager struct {
	ctrl     *gomock.Controller
	recorder *MockServiceNetworkManagerMockRecorder
}

// MockServiceNetworkManagerMockRecorder is the mock recorder for MockServiceNetworkManager.
type MockServiceNetworkManagerMockRecorder struct {
	mock *MockServiceNetworkManager
}

// NewMockServiceNetworkManager creates a new mock instance.
func NewMockServiceNetworkManager(ctrl *gomock.Controller) *MockServiceNetworkManager {
	mock := &MockServiceNetworkManager{ctrl: ctrl}
	mock.recorder = &MockServiceNetworkManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceNetworkManager) EXPECT() *MockServiceNetworkManagerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockServiceNetworkManager) Create(ctx context.Context, serviceNetwork *lattice.ServiceNetwork) (lattice.ServiceNetworkStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, serviceNetwork)
	ret0, _ := ret[0].(lattice.ServiceNetworkStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockServiceNetworkManagerMockRecorder) Create(ctx, serviceNetwork interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceNetworkManager)(nil).Create), ctx, serviceNetwork)
}

// Delete mocks base method.
func (m *MockServiceNetworkManager) Delete(ctx context.Context, serviceNetwork string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, serviceNetwork)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockServiceNetworkManagerMockRecorder) Delete(ctx, serviceNetwork interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockServiceNetworkManager)(nil).Delete), ctx, serviceNetwork)
}

// List mocks base method.
func (m *MockServiceNetworkManager) List(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockServiceNetworkManagerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockServiceNetworkManager)(nil).List), ctx)
}
