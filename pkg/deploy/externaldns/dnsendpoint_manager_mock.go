// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-application-networking-k8s/pkg/deploy/externaldns (interfaces: DnsEndpointManager)

// Package externaldns is a generated GoMock package.
package externaldns

import (
	context "context"
	reflect "reflect"

	lattice "github.com/aws/aws-application-networking-k8s/pkg/model/lattice"
	gomock "github.com/golang/mock/gomock"
)

// MockDnsEndpointManager is a mock of DnsEndpointManager interface.
type MockDnsEndpointManager struct {
	ctrl     *gomock.Controller
	recorder *MockDnsEndpointManagerMockRecorder
}

// MockDnsEndpointManagerMockRecorder is the mock recorder for MockDnsEndpointManager.
type MockDnsEndpointManagerMockRecorder struct {
	mock *MockDnsEndpointManager
}

// NewMockDnsEndpointManager creates a new mock instance.
func NewMockDnsEndpointManager(ctrl *gomock.Controller) *MockDnsEndpointManager {
	mock := &MockDnsEndpointManager{ctrl: ctrl}
	mock.recorder = &MockDnsEndpointManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDnsEndpointManager) EXPECT() *MockDnsEndpointManagerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDnsEndpointManager) Create(arg0 context.Context, arg1 *lattice.Service) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDnsEndpointManagerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDnsEndpointManager)(nil).Create), arg0, arg1)
}
