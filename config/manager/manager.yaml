apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: gateway-api-controller
  name: aws-application-networking-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-api-controller
  namespace: aws-application-networking-system
  labels:
    control-plane: gateway-api-controller
spec:
  selector:
    matchLabels:
      control-plane: gateway-api-controller
  replicas: 2
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: gateway-api-controller
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
          - mountPath: /etc/webhook-cert
            name: webhook-cert
            readOnly: true
      serviceAccountName: gateway-api-controller
      terminationGracePeriodSeconds: 10
      volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: webhook-cert
---
# placeholder secret so volume can mount successfully and controller can start
# will not pass validations (no CA, expired, and wrong DNS names)
apiVersion: v1
kind: Secret
metadata:
  name: webhook-cert
  namespace: aws-application-networking-system
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lKQUwzOVVONXpjMm9aTUEwR0NTcUdTSWIzRFFFQkN3VUFNQzh4RmpBVUJnTlYKQkFNTURXNXZkQzFoTFhKbFlXd3RZMjR4RlRBVEJnTlZCQW9NREc1dmRDMWhMWEpsWVd3dGJ6QWVGdzB5TkRBeQpNamN5TVRJM01ESmFGdzB5TXpBeU1qY3lNVEkzTURKYU1DOHhGakFVQmdOVkJBTU1EVzV2ZEMxaExYSmxZV3d0ClkyNHhGVEFUQmdOVkJBb01ERzV2ZEMxaExYSmxZV3d0YnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5jd1htN2RtL1NGdDVzY1JFR3NnUzAxN1dDMnErSXQwVWZwRDgvU1UrMmo2YTgyWjNVcgp1Zmg0MGFZNnhGUVZJVlFqa3F2RUNOeVhYU28xaHFFZXhUUWtZRFBGdHE2a2w3cC9TbloyaldkY0NBRHVWR0k3CktLbnkyWWtIdkhkNmg3MVJwNTREZmtDUERvUlZCdU9LU2RIdGtBakptVEVhWkJaWmJIajZHSzhEMnRnYXV2dTMKR0kvNWtMRVZ2clpTRlNYSkZ1aS9ISW5EMk54c29pTllldXB1RHFyZk9KcXBQVmowQUhKVnpTWkZtMmVqcmQvQQoxbE5HdjlBUEl1RkdDakk3bkNVNGNnQkxtQk1zVmpqUmt3RjZtdHlOS1hpSkYzTXVoVHRXNktINm1zcXBCRk1FCmI0NDcveS9YL1RpSjdONHF3UEkwTlVPTjRIcjJzb1VNc3hFQ0F3RUFBYU5RTUU0d0hRWURWUjBPQkJZRUZEUXIKclBieXhBL0dFVkM5MDdnd2lBbWlhcnlwTUI4R0ExVWRJd1FZTUJhQUZEUXJyUGJ5eEEvR0VWQzkwN2d3aUFtaQphcnlwTUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRXQzOXBTQ05vL0ppY053Ck5mUFNmZDRmWGFRUHZFam9hdk9xZG5Jdm55dFplRUlYZGFPZVpYa3dybFhMaC9SMW1aaURtMC90aEN5YVV1WEIKNDF3YU5TYVdqRWJjalNBTFNPaW9JMExDSjZUTmJJTzg1L1ZJNkMvVTl5dzh3dUhqaXpsVXY2VGFpRllKeXU0QgpRMHE5aStsL1RLR1MvcFNJY3BGS0RiYW5NVXlHQytvajZaVlExdWxUNkZUMnlNK2RLRXdyRFd4ZWhPMUJPTWUwCmVTS1phOUMxWHhqa2VNamdwVVM2R3BKamZrVFluMW5HekV0eng0VUp3ZXIzWDhKR2l0MFdlMStjVURiT0xaRXoKWmh0Nm9MRkpWL0ZMSjIvelJoeEZUazBjN0YrMHdwbldEK3F4Q2ZMbzBOaHlCMkIxcC9CKzZiK3NQdXFUdlNvTgpDaXh1cmg4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFhNRjV1M1p2MGhiZWIKSEVSQnJJRXROZTFndHF2aUxkRkg2US9QMGxQdG8rbXZObWQxSzduNGVOR21Pc1JVRlNGVUk1S3J4QWpjbDEwcQpOWWFoSHNVMEpHQXp4YmF1cEplNmYwcDJkbzFuWEFnQTdsUmlPeWlwOHRtSkI3eDNlb2U5VWFlZUEzNUFqdzZFClZRYmppa25SN1pBSXlaa3hHbVFXV1d4NCtoaXZBOXJZR3JyN3R4aVArWkN4RmI2MlVoVWx5UmJvdnh5Snc5amMKYktJaldIcnFiZzZxM3ppYXFUMVk5QUJ5VmMwbVJadG5vNjNmd05aVFJyL1FEeUxoUmdveU81d2xPSElBUzVnVApMRlk0MFpNQmVwcmNqU2w0aVJkekxvVTdWdWloK3ByS3FRUlRCRytPTy84djEvMDRpZXplS3NEeU5EVkRqZUI2CjlyS0ZETE1SQWdNQkFBRUNnZ0VBT2JHakwvQkVsdnVlN1h4WHBJLytsa09HSUU3NXFJdUdOOVI1dzh0dGF5SnUKVGVhMU9Fbi84MmxaTkVzL1JoZmdOckhPNmpTRjk3YXhhTmF2QU5YQ0k2ZTVEMGhzSVVqSjBWdTllQ055NkFwWgpydjQzSzVzVzNQSGFkdzNXN3VXd0xRY09mS1FOSG52OGRXaGlqM0VOTjdhTXpuNVdqejYzSlBMV3pWeW9iNHVJCkxKd3pCWkR3aHJyQjdMTXFKSzlpdUZiaWF2NkpBVFJGVjdBSHU4bnFRSWxBbTkrQnlxdXZQZkhPbXNtQUNsbHcKeTdOWnhLMFdSZmJPUzd4TGFFd1FHa3NEZXFRN2NQYUNOakkxWnArbUlLZEVpQ1VpQXZPdkNoSHd0TjNYNlNGbgpPcXNaQ3hvaE55L01Nam5mdWhpeXVvVi9WSlFLYmNHMk9TZzlGd0VMd1FLQmdRRHRnL0FETFRpWnUzNjFsckJrCkh0bVU0VUFXRlJVWGhnTmNvU0hyOTdRVWJ4TURTVEUvVjdYN0E1aFcvYzNiWC9Fcnd3bTBZeGZHY2FzNHJSSFQKWE9na3pYaDMxU01HWXlpVkF1cEtJTzJpQ2MxN1UxYkFLbEVOSDFtbnY1UE1PYkZDQm92S25leXdpUHJiSXZEaQp6SE5jOE9IL2l0R0dncDFCL3h1NlpucGplUUtCZ1FEbjc1NFpVc3pLVlhIVDdhTWhjOU43UHNrMjRadVlpTVJlCkMxYWIxTjhoRkxpVUNwRXN1NXVKcEV0d0tNL2dXaEpjaWxTaHRKK3gwZkczanNRSk5mWXZVRmxJa1JGVFBIdlQKS2RYNkVzYWFIVkZuM2dweitCcHZjVy9idk9pbEtCNDNSUlFKU2tnUmhkUnEvUjk4MnBzYWFBc09WRm96L28xWAowdWF4ckN1T1dRS0JnRzljMVVRb0I4bk01M1FzMnplV1gxNDIzdDE3dFEvNmZja0lvK2NIbFIrZmxNS05wdEdVClJuY1RFSEo1UGZRRjRBWXN4SGdYbmlZbFZhcVZPeTVtK1ZHSUpWdktTMG5MWkZPNXNqQmZrQXZSbk02ZUhLYXQKTUtOK2Q0TDNpRXpSSUJOZERsNUovWmdvSWJadGc1UlRXQ1BUcmFNcmEySXVDNTNPQnlvMnNsdkJBb0dBTkYrdwpsTWxVdzAvZUgxd25IVE81aXJnWDJkUENQZ1NNU3l4R1IzUWZXcW9DTURQZXFucEcyaU1HZ2ZKRlZzVWdKbE42Clh2V1pwaDdoZFhEQXBjL1Fvc2lERU5icFVhRnoyTEEyeUh5YTZrdzZpTGprSldIZUhsSkFUeDl1YlhVTXRiQmMKb09oc004RER3ZEVjM2lYREpvaGVEc05QaHpReEdLYmdQempBc1NrQ2dZRUFoNk1UWHFHeGlLbDU3WTFOb1lYTwo3U0EzRXF4R1BjL091NVh4RWdrTnRRV0hnMWN1cmtBeU1UaXRrMklzRVhCL2RISjN6Y2hiQjlEcThCRDBBeDl2CkM0QUdMVWdiOTZhREl6dmwwbXk4MHZ6dkZGaEt3Z3UzeXFTaFhQclZNSS8wM045ckx6VUJlaWxoRHE5UFVjR24KcTJTeTNUTS9CenlaYlgyQjdYK0gyVms9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K